{
  "strategy": "single_domain_double_shot",
  "prompt_prefix": "CREATE TABLE Customer (\n    CustomerID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    FirstName TEXT NOT NULL,\n    LastName TEXT NOT NULL,\n    Email TEXT NOT NULL,\n    Birthday DATE NOT NULL,\n    Points INTEGER NOT NULL\n);\n\nCREATE TABLE \"Order\" (\n    OrderID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    ShopID INTEGER NOT NULL,\n    CustomerID INTEGER NOT NULL,\n    FOREIGN KEY (ShopID) REFERENCES Shop (ShopID),\n    FOREIGN KEY (CustomerID) REFERENCES Customer (CustomerID)\n);\n\nCREATE TABLE CookieOrder (\n    OrderID INTEGER NOT NULL,\n    CookieID INTEGER NOT NULL,\n    Amount INTEGER NOT NULL,\n    PRIMARY KEY (OrderID, CookieID),\n    FOREIGN KEY (OrderID) REFERENCES \"Order\" (OrderID)\n);\n\nCREATE TABLE Cookie (\n    CookieID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    Type TEXT NOT NULL,\n    CookieName TEXT NOT NULL,\n    GlutenFree BOOLEAN NOT NULL,\n    DairyFree BOOLEAN NOT NULL\n);\n\nCREATE TABLE Shop (\n    ShopID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    AddressID INTEGER NOT NULL,\n    PhoneNumber TEXT NOT NULL,\n    FOREIGN KEY (AddressID) REFERENCES Address (AddressID)\n);\n\nCREATE TABLE CookieShop (\n    ShopID INTEGER NOT NULL,\n    CookieID INTEGER NOT NULL,\n    PRIMARY KEY (ShopID, CookieID),\n    FOREIGN KEY (CookieID) REFERENCES Cookie (CookieID)\n);\n\nCREATE TABLE Address (\n    AddressID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    State TEXT NOT NULL,\n    Zip INTEGER NOT NULL,\n    City TEXT NOT NULL\n);\n\n-- Add constraints\nPRAGMA foreign_keys = ON;\n Who doesn't have a way for us to text them?  \nSELECT p.person_id, p.name\nFROM person p\nLEFT JOIN phone ph ON p.person_id = ph.person_id AND ph.can_recieve_sms = 1\nWHERE ph.phone_id IS NULL;\n  Give me a sqlite select statement that answers the question. Only respond with sqlite syntax. If there is an error do not explain it!",
  "questionResults": [
    {
      "question": "Which shop sells the most cookies?",
      "sql": "\nSELECT s.ShopID, s.AddressID, s.PhoneNumber, SUM(co.Amount) AS TotalCookiesSold\nFROM Shop s\nJOIN \"Order\" o ON s.ShopID = o.ShopID\nJOIN CookieOrder co ON o.OrderID = co.OrderID\nGROUP BY s.ShopID\nORDER BY TotalCookiesSold DESC\nLIMIT 1;\n",
      "queryRawResponse": "[(1, 1, '8012565256', 8)]",
      "friendlyResponse": "Shop with ID 8012565256 sells the most cookies with 8 sold.",
      "error": "None"
    },
    {
      "question": "Which cookie is sold at the most shops?",
      "sql": "\nSELECT c.CookieName\nFROM Cookie c\nJOIN CookieShop cs ON c.CookieID = cs.CookieID\nGROUP BY c.CookieID\nORDER BY COUNT(cs.ShopID) DESC\nLIMIT 1;\n",
      "queryRawResponse": "[('Pumpkin Chocolate Chip',)]",
      "friendlyResponse": "Pumpkin Chocolate Chip.",
      "error": "None"
    },
    {
      "question": "Who's birthday is next?",
      "sql": "\nSELECT FirstName, LastName, Birthday\nFROM Customer\nWHERE strftime('%m-%d', Birthday) = strftime('%m-%d', 'now')\nORDER BY CASE \n            WHEN strftime('%m-%d', Birthday) > strftime('%m-%d', 'now') THEN 1 \n            ELSE 2 \n         END, \n         strftime('%m-%d', Birthday) \nLIMIT 1;\n",
      "queryRawResponse": "[]",
      "friendlyResponse": "I would need more context or a list of dates to answer that question accurately.",
      "error": "None"
    },
    {
      "question": "Which shop has the most profit?",
      "sql": "\nSELECT\n    o.ShopID,\n    SUM(co.Amount * c.Price) AS TotalProfit\nFROM\n    \"Order\" o\nJOIN\n    CookieOrder co ON o.OrderID = co.OrderID\nJOIN\n    Cookie c ON co.CookieID = c.CookieID\nGROUP BY\n    o.ShopID\nORDER BY\n    TotalProfit DESC\nLIMIT 1;\n",
      "queryRawResponse": "[]",
      "friendlyResponse": "I would need more context or a list of dates to answer that question accurately.",
      "error": "no such column: c.Price"
    },
    {
      "question": "Which is the least popular cookie across all shops?",
      "sql": "\nSELECT c.CookieName\nFROM Cookie c\nLEFT JOIN CookieOrder co ON c.CookieID = co.CookieID\nGROUP BY c.CookieID\nORDER BY SUM(co.Amount) ASC\nLIMIT 1;\n",
      "queryRawResponse": "[('Oatmeal Raisin',)]",
      "friendlyResponse": "Oatmeal Raisin is the least popular cookie.",
      "error": "None"
    },
    {
      "question": "Which customer has the biggest orders?",
      "sql": "\nSELECT o.CustomerID, COUNT(co.CookieID) AS TotalCookies\nFROM \"Order\" o\nJOIN CookieOrder co ON o.OrderID = co.OrderID\nGROUP BY o.CustomerID\nORDER BY TotalCookies DESC\nLIMIT 1;\n",
      "queryRawResponse": "[(1, 3)]",
      "friendlyResponse": "The customer with the biggest order is Customer 1 with 3 orders.",
      "error": "None"
    },
    {
      "question": "Where does Devin live?",
      "sql": "\nSELECT a.City \nFROM Customer c\nJOIN Address a ON c.CustomerID = a.AddressID\nWHERE c.FirstName = 'Devin';\n",
      "queryRawResponse": "[]",
      "friendlyResponse": "I'm sorry, but I can't provide information about where Devin lives.",
      "error": "None"
    }
  ]
}